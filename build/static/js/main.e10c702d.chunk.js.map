{"version":3,"sources":["resources/images/genetic.svg","components/main/HeaderComponent.js","components/auth/LoginComponent.js","components/auth/RegisterComponent.js","components/auth/LogoutComponent.js","components/app/landing/IntroductionComponent.js","components/app/landing/DropComponent.js","components/app/landing/LoadingComponent.js","components/app/results/ResultsComponent.js","resources/constants.js","services/DataProcessingService.js","components/app/landing/ContentComponent.js","components/app/MainPageComponent.js","components/main/KypComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderComponent","state","activeItem","userLoggedIn","handleItemClick","bind","event","name","this","setState","Container","fluid","Menu","pointing","secondary","inverted","color","size","Item","active","onClick","as","Link","to","Icon","position","width","Dropdown","item","trigger","handleLogout","Component","LoginComponent","RegisterComponent","LogoutComponent","IntroductionComponent","style","padding","Grid","centered","Column","Image","src","logo","styling","fontSize","fontStyle","DropComponent","props","loaded","error","dataset","parseToJSON","processButtonClicked","file","data","self","reader","FileReader","readAsText","addEventListener","csv","allTextLines","split","lines","x","y","line","charArr","counter","i","length","commaCounter","newlines","newCharArr","j","push","str","join","commaToPoint","delimeter","findDelimiter","shift","parseFloat","processData","result","process","Header","icon","onDrop","getRootProps","getInputProps","Button","LoadingComponent","Dimmer","Loader","indeterminate","ResultsComponent","tableData","structures","table","part","round","absorbance","maxLocation","bandMaxIndex","getTableData","colors","legend","symbol","fill","legendBuilder","Divider","Table","Row","HeaderCell","Body","map","s","key","clientId","negative","Cell","peakPosition","stroke","labels","transforamteData","datum","label","dependentAxis","axisLabelComponent","dy","text","title","centerTitle","orientation","gutter","itemsPerRow","border","n","Math","pow","API_URL","console","log","axios","post","ContentComponent","processing","results","retrieveResults","download","DataProcessingService","analyzeSpectrum","then","res","body","catch","err","input","document","getElementById","html2canvas","canvas","docDefinition","pageSize","content","image","toDataURL","pdfmake","createPdf","Segment","placeholder","minWidth","id","MainPageComponent","KypComponent","URL","Sticky","path","exact","component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e10c702d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/genetic.a1343fbe.svg\";","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Menu, Icon, Dropdown } from 'semantic-ui-react'\n//import AuthService from '../../services/AuthService'\n\nexport class HeaderComponent extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            activeItem: 'home',\n            userLoggedIn: false\n        }\n\n        this.handleItemClick = this.handleItemClick.bind(this)\n        // this.handleLogout = this.handleLogout.bind(this)\n        // this.isUserLoggedIn = this.isUserLoggedIn.bind(this)\n    }\n\n    handleItemClick(event, {name}) {\n        this.setState({activeItem: name})\n    }\n\n    // handleLogout(event) {\n    //     this.setState({activeItem: 'home', userLoggedIn: false})\n    //     AuthService.logout()\n    //     return <Redirect to='/logout' />\n    // }\n\n    // isUserLoggedIn() {\n    //     return AuthService.isUserLoggedIn();\n    // }\n\n    render() {\n        const { activeItem } = this.state;\n\n        return (\n            <Container fluid>\n                 <Menu pointing secondary inverted color={'red'} size={'massive'}>\n\n                        <Menu.Item\n                        name='home'\n                        active={activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                        as={Link} to='/'\n                        ><Icon name='flask' /> Know your protein\n                        </Menu.Item>\n\n                     {!this.state.userLoggedIn && <Menu.Menu position=\"right\" width={6}>\n                         <Menu.Item\n                         name='signin'\n                         active={activeItem === 'signin'}\n                         onClick={this.handleItemClick}\n                         as={Link} to='/login'\n                         >Sign In\n                         </Menu.Item>\n                         <Menu.Item\n                         name='signup'\n                         active={activeItem === 'signup'}\n                         onClick={this.handleItemClick}\n                         as={Link} to='/register'>Sign up\n                         </Menu.Item>\n                     </Menu.Menu>}\n\n                     {this.state.userLoggedIn && <Menu.Menu position=\"right\" width={6}>\n                        <Dropdown item trigger={<span><Icon name='user' /> Profile</span>}>\n                            <Dropdown.Menu>\n                                {/* <Dropdown.Item as={Link} to='/lists'><Icon name='list ul' /> Lists</Dropdown.Item> */}\n                                <Dropdown.Item> Spectrum 1 </Dropdown.Item>\n                                <Dropdown.Item> Spectrum 2 </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                         <Menu.Item\n                         name='logout'\n                         active={activeItem === 'logout'}\n                         onClick={this.handleLogout}\n                         as={Link} to='/logout'>Logout\n                         </Menu.Item>\n                     </Menu.Menu>}\n                 </Menu>\n             </Container>\n        )\n    }\n}\n\nexport default HeaderComponent\n","import React, { Component } from 'react'\n\nexport class LoginComponent extends Component {\n    render() {\n        return (\n            <div>\n                login\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent\n","import React, { Component } from 'react'\n\nexport class RegisterComponent extends Component {\n    render() {\n        return (\n            <div>\n                register\n            </div>\n        )\n    }\n}\n\nexport default RegisterComponent\n","import React, { Component } from 'react'\n\nexport class LogoutComponent extends Component {\n    render() {\n        return (\n            <div>\n                logout\n            </div>\n        )\n    }\n}\n\nexport default LogoutComponent\n","import React, { Component } from 'react'\nimport { Grid, Image, Container } from 'semantic-ui-react'\nimport logo from '../../../resources/images/genetic.svg'\n\nexport class IntroductionComponent extends Component {\n    render() {\n        return (\n            <>\n               <Container style={{padding: '40px'}}>\n                   <Grid centered>\n                       <Grid.Column width={4}>\n                         <Image src={logo} size='massive' />\n                       </Grid.Column>\n                       <Grid.Column width={8} style={styling}>\n                         <p>drag the spectra and simply analyze your protein</p>\n                       </Grid.Column>\n                   </Grid>\n               </Container> \n            </>\n        )\n    }\n}\n\nexport default IntroductionComponent\n\nconst styling = {\n    padding: '30px 0 30px',\n    fontSize: '2rem',\n    color: 'grey',\n    fontStyle: 'Lato, sans-serif'\n}\n","import React, { Component } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { Header, Icon, Button } from 'semantic-ui-react'\n\nexport class DropComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loaded: false,\n            error: '',\n            dataset: null\n        }\n\n        this.parseToJSON = this.parseToJSON.bind(this)\n        this.processButtonClicked = this.processButtonClicked.bind(this)\n    }\n\n    parseToJSON(file) {\n        let data;\n        let self = this\n        const reader = new FileReader();\n        reader.readAsText(file[0])\n        reader.addEventListener(\"loadend\", function () {\n            data = processData(reader.result)\n            self.setState({dataset: data});\n        })\n    }\n\n    processButtonClicked() {\n        if(this.state.dataset !== null) {\n            this.props.process(this.state.dataset)\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Header icon>\n                {this.state.loaded ? <Icon name='check' /> : <Icon name='file alternate' />}\n                <Dropzone onDrop={file => {\n                    this.setState({loaded: true})\n                    this.parseToJSON(file)}}>\n                  {({getRootProps, getInputProps}) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        {this.state.loaded ? \n                        <p>File uploaded, click button to calculate</p> :\n                        <p>Drag your CSV file here or click to upload</p>}\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n                </Header>\n                <Button onClick={this.processButtonClicked} color='red' size='big'>Process</Button>\n            </>\n        )\n    }\n}\n\nexport default DropComponent\n\nfunction processData(csv) {\n    let allTextLines = csv.split(/\\r\\n|\\n/)\n    let lines = []\n    let x = []\n    let y = []\n\n    if(commaCounter(allTextLines[0]) > 1) {\n        allTextLines = commaToPoint(allTextLines)\n    } \n\n    let delimeter = findDelimiter(allTextLines[0])\n\n    while (allTextLines.length) {\n        lines.push(allTextLines.shift().split(delimeter));\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n        x.push(parseFloat(lines[i][0]))\n        y.push(parseFloat(lines[i][1]))\n    }\n    let dataset = {\n        x: x,\n        y: y\n    }\n    return dataset;\n}\n\nfunction findDelimiter(line) {\n    let charArr = line.split(/(?=[\\s\\S])/u)\n    for (let i = 0; i < charArr.length; i++) {\n        if (charArr[i] === ' ' || charArr[i] === ',' || charArr[i] === ';' || charArr[i] === '  ') return charArr[i]\n    }\n    return ','\n}\n\nfunction commaCounter(line) {\n    let charArr = line.split(/(?=[\\s\\S])/u)\n    let counter = 0\n    for (let i = 0; i < charArr.length; i++) {\n        if(charArr[i] === ',') counter++\n    }\n    return counter\n}\n\nfunction commaToPoint(lines) {\n    let newlines = [];\n\n    for(let i = 0; i < lines.length; i++) {\n\n        let charArr = lines[i].split(/(?=[\\s\\S])/u)\n        let newCharArr = [];\n\n        for(let j = 0; j < charArr.length; j++) {\n            if(charArr[j] === ',') charArr[j] = '.'\n            newCharArr.push(charArr[j])\n        }\n\n        let str = newCharArr.join('')\n        newlines.push(str)\n    }\n    return newlines\n}","import React, { Component } from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nexport class LoadingComponent extends Component {\n    render() {\n        return (\n            <>\n            <Dimmer active inverted>\n                <Loader indeterminate size='massive'>Calculating...</Loader>\n            </Dimmer>\n            </>\n        )\n    }\n}\n\nexport default LoadingComponent\n","import React, { Component } from 'react'\nimport { Header, Table, Divider } from 'semantic-ui-react'\nimport { VictoryChart, VictoryLine, VictoryAxis, VictoryLegend, VictoryLabel } from 'victory'\n\nexport class ResultsComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: this.props.data\n        }\n\n\n    }\n\n    render() {\n\n        const tableData = getTableData(this.state.data)\n        const colors = ['#002f8c', '#00a60b', '#a66f00', '#008aa6', '#4200a6', '#8c0000', '#000000']\n        const legend = legendBuilder(this.state.data)\n\n        return (\n            <>\n                <Header as='h2' style={{padding: '10px 0 20px'}}>Results</Header>\n                <Divider />\n                <Table color='red'>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>L.p.</Table.HeaderCell>\n                            <Table.HeaderCell>Structure</Table.HeaderCell>\n                            <Table.HeaderCell>Percentage</Table.HeaderCell>\n                            <Table.HeaderCell>Peak Location [cm-1]</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                    {\n                        this.state.data.structures.map(s => (\n                                s.name === 'Amide I' ? \n                            <Table.Row key={s.clientId} negative>\n                                <Table.Cell>{s.clientId}</Table.Cell>\n                                <Table.Cell>{s.name}</Table.Cell>\n                                <Table.Cell>{tableData[s.clientId-1].part}</Table.Cell>\n                                <Table.Cell>{round(s.peakPosition, 1)}</Table.Cell>\n                            </Table.Row> \n                                    : \n                            <Table.Row key={s.clientId}>\n                                <Table.Cell>{s.clientId}</Table.Cell>\n                                <Table.Cell>{s.name}</Table.Cell>\n                                <Table.Cell>{tableData[s.clientId-1].part}</Table.Cell>\n                                <Table.Cell>{round(s.peakPosition, 1)}</Table.Cell>\n                            </Table.Row> \n                        ))\n                    }\n                    </Table.Body>\n                </Table>\n                <Divider />\n                <VictoryChart>\n                {\n                    this.state.data.structures.map(s => (\n                        <VictoryLine\n                        key = {s.clientId}\n                        style = {{data: {stroke: colors[s.clientId-1]}, labels: {fontSize: 10}}}\n                        data = {transforamteData(s.data.x, s.data.y)}\n                        name = {s.name}\n                        labels = {({ datum }) => datum.x === s.peakPosition ? round(datum.x, 1) : null }\n                    />\n                    ))\n                }\n                <VictoryAxis\n                    label = \"Wavenumber [cm-1]\"\n                />\n                <VictoryAxis dependentAxis\n                    axisLabelComponent={<VictoryLabel dy={10} text=\"Absorbance [-]\" />}\n                />\n                \n                </VictoryChart>\n                <VictoryLegend\n                    x={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={10}\n                    itemsPerRow={2}\n                    style={{ border: { stroke: \"black\" }, title: {fontSize: 20 } }}\n                    data={legend} />\n                </>\n        )\n    }\n}\n\nexport default ResultsComponent\n\nfunction transforamteData(x, y) {\n    const data = []\n    for (let i = 0; i < x.length; i++) {\n        data.push({x: x[i], y: y[i]})\n    }\n    return data;\n}\n\nfunction getTableData(data) {\n    const structures = data.structures\n    const table = [];\n\n    for (let i = 0; i < structures.length; i++) {\n        table.push({\n            name: structures[i].name,\n            part: round((structures[i].absorbance / structures[structures.length-1].absorbance)*100, 2),\n            maxLocation: structures[i].data.x[structures[i].bandMaxIndex]\n        })\n    }\n    return table;\n}\n\nfunction round(x, n) {\n    return Math.round(x * Math.pow(10, n)) / Math.pow(10, n)\n}\n\nfunction legendBuilder(data) {\n    let legend = []\n    let colors = ['#002f8c', '#00a60b', '#a66f00', '#008aa6', '#4200a6', '#8c0000', '#000000']\n    for (let i = 0; i < data.structures.length; i++) {\n        legend.push({ name: data.structures[i].name, symbol: {fill: colors[i]} })\n    }\n    return legend;\n}","\nconst PORT = 51524;\nconst URL = 'know-your-protein.herokuapp.com'\n\nexport const API_URL = `https://${URL}`","import axios from 'axios'\nimport { API_URL } from '../resources/constants'\n\nclass DataProcessingService {\n\n    analyzeSpectrum(data) {\n        console.log(API_URL)\n        return axios.post(API_URL + '/analyze', data)\n    }\n}\n\nexport default new DataProcessingService()\n\n","import React, { Component } from 'react'\nimport { Segment, Button, Icon } from 'semantic-ui-react'\nimport DropComponent from './DropComponent'\nimport LoadingComponent from './LoadingComponent'\nimport ResultsComponent from '../results/ResultsComponent'\nimport DataProcessingService from '../../../services/DataProcessingService'\nimport html2canvas from 'html2canvas'\nimport pdfmake from 'pdfmake'\n\nexport class ContentComponent extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            processing: false,\n            results: false,\n            data: null\n        }\n\n        this.retrieveResults = this.retrieveResults.bind(this)\n        this.download = this.download.bind(this)\n    }\n\n    retrieveResults(dataset) {\n        this.setState({processing: true})\n        DataProcessingService.analyzeSpectrum(dataset)\n        .then( res => {\n            this.setState({\n                processing: false,\n                results: true,\n                data: res.data.body})\n        })\n        .catch(err => console.log(err))\n    }\n\n    download() {\n        const input = document.getElementById('download')\n\n        html2canvas(input, {y: 350}).then(canvas => {\n            const data = canvas.toDataURL();\n            const docDefinition = {\n                pageSize: 'A4',\n                content: [{\n                    image: data,\n                    width: 500\n                }]\n            }\n            pdfmake.createPdf(docDefinition).download(\"Protein_Details.pdf\");\n        })\n    }\n\n\n    render() {\n        return (\n            <Segment placeholder style={{width: '60%', minWidth: '220mm'}}>\n                {!this.state.processing && !this.state.results && <DropComponent process={this.retrieveResults} />}\n                {this.state.processing && <LoadingComponent />}\n                {this.state.results && <div id='download' ><ResultsComponent data={this.state.data} /></div>}\n                {this.state.results && <Button color='red' size='large' onClick={this.download}><Icon name='download' />Download as PDF</Button>}\n            </Segment>\n        )\n    }\n}\n\nexport default ContentComponent","import React, { Component } from 'react'\nimport IntroductionComponent from './landing/IntroductionComponent'\nimport ContentComponent from './landing/ContentComponent'\nimport { Divider, Grid } from 'semantic-ui-react'\n\nexport class MainPageComponent extends Component {\n    render() {\n        return (\n            <Grid centered>\n                <Grid.Row>\n                    <IntroductionComponent />\n                    <Divider />\n                </Grid.Row>\n                <Grid.Row>\n                    <ContentComponent />\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default MainPageComponent\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Sticky } from 'semantic-ui-react'\n\nimport HeaderComponent from './HeaderComponent'\n//import FooterComponent from './FooterComponent'\n\nimport LoginComponent from '../auth/LoginComponent'\nimport RegisterComponent from '../auth/RegisterComponent'\nimport LogoutComponent from '../auth/LogoutComponent'\n\nimport MainPageComponent from '../app/MainPageComponent'\n\nexport class KypComponent extends Component {\n    render() {\n        const URL = '/know-your-protein-client';\n        return (\n            <div>\n                <Router>\n                    <>\n                      <Sticky>\n                          <HeaderComponent />\n                      </Sticky>\n                      <Switch>\n                        <Route path={`${URL}/`} exact component={MainPageComponent} />\n                        <Route path={`${URL}/login`} component={LoginComponent} />\n                        <Route path={`${URL}/register`} component={RegisterComponent} />\n                        <Route path={`${URL}/logout`} component={LogoutComponent} />\n                      </Switch>\n                      {/* <FooterComponent /> */}\n                    </>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default KypComponent\n","import React, { Component } from 'react'\nimport './App.css'\nimport KypComponent from './components/main/KypComponent'\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <KypComponent />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-less/semantic.less'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}